<?php

/**
 * Model_Base_User
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $email
 * @property string $phone
 * @property string $address
 * @property string $username
 * @property string $password
 * @property string $saltstring
 * @property Doctrine_Collection $Sessions
 * @property Doctrine_Collection $Groups
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Model_Base_User extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 300, array(
             'type' => 'string',
             'length' => '300',
             ));
        $this->hasColumn('email', 'string', 300, array(
             'type' => 'string',
             'length' => '300',
             ));
        $this->hasColumn('phone', 'string', 10, array(
             'type' => 'string',
             'length' => '10',
             ));
        $this->hasColumn('address', 'string', 300, array(
             'type' => 'string',
             'length' => '300',
             ));
        $this->hasColumn('username', 'string', 30, array(
             'type' => 'string',
             'length' => '30',
             ));
        $this->hasColumn('password', 'string', 40, array(
             'type' => 'string',
             'length' => '40',
             ));
        $this->hasColumn('saltstring', 'string', null, array(
             'type' => 'string',
             'length' => '',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Model_Session as Sessions', array(
             'local' => 'id',
             'foreign' => 'userid'));

        $this->hasMany('Model_Usergroup as Groups', array(
             'local' => 'id',
             'foreign' => 'userid'));
    }
}